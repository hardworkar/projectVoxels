cmake_minimum_required(VERSION 3.17)
project(voxelsWithCuda CUDA)
set(CMAKE_CUDA_STANDARD 14)
set(CMAKE_CXX_STANDARD 14)

#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
#include_directories(${PROJECT_SOURCE_DIR})
add_executable(voxelsWithCuda rayCast.cu geometry.cuh tga.h tga_by_nvidia.cu tga.cuh voxelizer.cu voxelizer.cuh saver.cu saver.cuh main.cu)
set_target_properties(voxelsWithCuda PROPERTIES CUDA_SEPARABLE_COMPILATION ON)


include_directories(graphics/include)
include_directories("C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.1/include")

find_library(SFML-GRAPHICS sfml-graphics graphics/lib)
find_library(SFML-WINDOW sfml-window graphics/lib)
find_library(SFML-SYSTEM sfml-system graphics/lib)
find_library(SFML-MAIN sfml-main graphics/lib)
find_library(FREETYPE freetype graphics/lib)
find_library(FREEGLUT freeglut graphics/lib)
message(${FREEGLUT})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${SFML-GRAPHICS})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${SFML-WINDOW})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${SFML-SYSTEM})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${SFML-MAIN})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${FREETYPE})
target_link_libraries(voxelsWithCuda LINK_PUBLIC ${FREEGLUT})
